
[1, 2, 3, 4]
|> Stream.map(&(&1 * &1))
|> Stream.map(&(&1 + 1))
|> Stream.filter(fn x -> rem(x, 2) == 1 end)
|> Enum.to_list

# 스트림은 중간 결과를 담은 리스트를 만들지 않는다
# 그저 원본 컬렉션의 각 값을 연속된 연산에 차례로 태울 뿐이다
# 조합된 스트림은 함수의 리스트로 표현되어, 실제로 연산이 수행될 때 컬렉션의 각 목에 차례로 적용된다
