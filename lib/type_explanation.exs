

# 타입
# 기본 자료형이 반드시 그 자료형으로 표현할 수 있는 타입과 같을 필요는 없다
# 기본 자료형인 엘릭서 리스트는 단지 값들을 순서대로 묶어놓았을 뿐이다
# 다른 계층에 List 모듈로 이 모듈을 활용해 리스트 연산 함수들을 제공한다
# 구현과 연산을 분리해 구성하였다

# 맵도 또한 키와 값을 연결해 데이털르 저장하는 기본 자료형이다
# 이도 리스트와 비슷하게 모듈로 더 풍부한 타입을 제공한다

# Keyword 모듈로 키워드 리스트 타입을 제공하는데,
# 이 타입은 실제로는 튜플의 리스트다
# 이 역시 리스트이므로 List 모듈의 모든 함수를 사용할 수 있다
# 여기에 딕셔너리 같은 동작까지 추가된 것이다

options = [{:width, 72}, {:style, "light"}, {:style, "Print"}]
# [width: 72, style: "light", style: "Print"]

List.last(options)
# {:style, "Print"}

Keyword.get_values(options, :style)
# ["light", "Print"]


# 이는 동적 객체지향 언어에서 말하는 덕 타이핑의 일종이다
# keyword 모듈은 기본 자료형이 없지만, 정해진 구조를 가진 리스트라면 무엇이든 이 모듈을 사용할 수 있다
# 이는 엘릭서 컬렉션 API의 폭이 꽤 넓음을 의미한다
# 키워드 리스트를 사용하면 기본 리스트 타입의 API와 List, Keyword 모듈의 API를 모두 사용할 수 있다
# 여기에 더해 Enum과 Collectable도 활용할 수 있는 것이다
